/*
 * NeoLoad API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Members assigned to Workspace
 */
@Schema(description = "Members assigned to Workspace")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-04-16T09:41:51.665+02:00[Europe/Paris]")


public class MemberDefinition {
  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("login")
  private String login = null;

  /**
   * User source
   */
  @JsonAdapter(UserSourceEnum.Adapter.class)
  public enum UserSourceEnum {
    SAAS("SAAS"),
    INTERNAL("INTERNAL"),
    LDAP("LDAP");

    private String value;

    UserSourceEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static UserSourceEnum fromValue(String text) {
      for (UserSourceEnum b : UserSourceEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<UserSourceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final UserSourceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public UserSourceEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return UserSourceEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("userSource")
  private UserSourceEnum userSource = null;

  public MemberDefinition firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * User first name
   * @return firstName
  **/
  @Schema(description = "User first name")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public MemberDefinition lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * User last name
   * @return lastName
  **/
  @Schema(description = "User last name")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public MemberDefinition login(String login) {
    this.login = login;
    return this;
  }

   /**
   * User login
   * @return login
  **/
  @Schema(description = "User login")
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }

  public MemberDefinition userSource(UserSourceEnum userSource) {
    this.userSource = userSource;
    return this;
  }

   /**
   * User source
   * @return userSource
  **/
  @Schema(description = "User source")
  public UserSourceEnum getUserSource() {
    return userSource;
  }

  public void setUserSource(UserSourceEnum userSource) {
    this.userSource = userSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MemberDefinition memberDefinition = (MemberDefinition) o;
    return Objects.equals(this.firstName, memberDefinition.firstName) &&
        Objects.equals(this.lastName, memberDefinition.lastName) &&
        Objects.equals(this.login, memberDefinition.login) &&
        Objects.equals(this.userSource, memberDefinition.userSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, lastName, login, userSource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MemberDefinition {\n");
    
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    userSource: ").append(toIndentedString(userSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
